<div class="zipcode-box-main" >
  <div class="zipcode-box-outer">
    <div class="zipcode-box-inner">
      <div class="zipcode-box-col">
        <div class="zipcode-box-col-inner">
          <p>
            Your Zipcode: 
            <span class="zipcode">90046</span>
            <span class="zone-tag local" style="display: none;">LOCAL</span>
            <span class="zone-tag non-local" style="display: none;">NON LOCAL</span>
            <a href="" class="change_your_zip">Change your Zipcode</a>
          </p>
        </div>
      </div>
      <div class="zipcode-box-col">
        <div class="zipcode-box-col-inner">
          <p>
            Your Hardiness Zone:
            <span class="zone">10b</span>
            <a class="zone-info">Zone info {% if section.settings.zone-img-main != blank %}<span class="zone-img-main"><img src="{{ section.settings.zone-img-main | image_url }}" width="100" height="100" /></span>{% endif %}</a>
            {% if section.settings.zone-img-icon != blank %}
            <span class="zone-img-icon"><img src="{{ section.settings.zone-img-icon | image_url }}" width="100" height="100" /></span>
            {% endif %}
          </p>
        </div>
      </div>
    </div>
    
  </div>
</div>



<div class="zipcode-box-form" style="display:none;">
  <div class="zipcode-box-form-outer">
    <div class="zipcode-box-form-inner">
      <div class="close-pop-up-btn">
        <span><i class="uil uil-multiply"></i></span>
      </div>
      <div class="zipcode-box-form-modal">
        <form id="zipcode-form" action="" method="post">
          <h2>{{ section.settings.heading }}</h2>
          <div class="zipcode-box-form-modal-description-one">
            {{ section.settings.description }}
          </div>
          <div class="zipcode-box-form-modal-description-two">
            {{ section.settings.paragraph }}
          </div>
          <input type="text" name="zipcode_change" id="zipcode">
          <!-- <input type="submit" name="zipcode-submit" value="Submit" id="zipcode-submit"> -->
          <button id="zipcode-submit">Submit</button>
          <button class="close-form-btn">cancel</button>
        </form>
      </div>
    </div>
  </div>
</div>


<style>
body.active_zip_form { overflow: hidden; }
body.active_zip_form:before { content: ''; position: absolute; inset: 0; width: 100%; height: 100%; background-color: rgb(0 0 0 / 50%); z-index: 9999; }
/* .zipcode-box-main { display: none; } */
.zipcode-box-main { padding: 10px !important; background-color: #fff; width: 100% !important; max-width: var(--maxwidth); margin-right: auto; margin-left: auto; margin-top: 15px; }
.zipcode-box-outer { border-radius: 10px; border: 1px solid #D1D0CE; background: #FCFAF7; box-shadow: 0px 10px 60px 0px rgba(104, 104, 104, 0.20);position: relative; }
.zipcode-box-inner { width: 100%; display: flex; flex-wrap: wrap; align-items: center; justify-content: center; }
.zipcode-box-col { width: 50%; }
.zipcode-box-col-inner { padding: 10px; text-align: center; }
.zipcode-box-col-inner p { margin: 0; display: flex; justify-content: center; align-items: center; color: #000; text-align: center; font-family: Roboto; font-size: 18px; font-style: normal; font-weight: 400; line-height: 32px; }
.zipcode-box-col:last-child:before { content: ''; position: absolute; top: 50%; width: 2px; height: 70%; background-color: rgb(0 0 0 / 5%); transform: translateY(-50%); }
.zipcode-box-col-inner p span { display: inline-block; margin-left: 16px; font-weight: 700; margin-right: 2px; }
.zipcode-box-main a.change_your_zip { color: #A7B261; text-align: center; font-family: Roboto; font-size: 16px; font-style: normal; font-weight: 400; line-height: 32px; margin-left: 7px; text-decoration-line: underline; display: inline-block; }
.zipcode-box-main span.zone-tag { padding: 4px 15px !important; border: 1px solid #ccc; margin: 0 10px; clear: both; color: #FFF; text-align: center; font-family: Roboto; font-size: 16px; font-style: normal; font-weight: 400; line-height: normal; background: #0B3D2C; }
.zipcode-box-main a.zone-info { margin: 0 23px; color: #A7B261; text-align: center; font-family: Roboto; font-size: 18px; font-style: normal; font-weight: 400; line-height: 32px; text-decoration-line: underline; }
.zipcode-box-form { position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 999999; width: calc(100% - 30px); max-width: 580px; background-color: #fff; box-shadow: 0 3px 6px rgba(0, 0, 0, 0.3); }
.zipcode-box-form-inner { text-align: center; }
.close-pop-up-btn { background: #fcfcfc; border-bottom: 1px solid #ddd; height: 29px; text-align: right; }
.close-pop-up-btn span { width: 29px; height: 29px; padding: 0; cursor: pointer; display: inline-block; transition: color .1s ease-in-out, background .1s ease-in-out; margin: auto; font-size: 22px; text-align: center; }
.zipcode-box-form-modal { padding: 20px 20px 80px; }
.zipcode-box-form-modal h2 { font-size: 47.38px; color: #000; max-width: 430px; margin: auto; font-weight: 700; margin-bottom: 8px; }
.zipcode-box-form-modal-description-one p,
.zipcode-box-form-modal-description-two p { font-size: 11px; padding: 5px 0px 5px 0px; margin-bottom: 20px; color: #545454; }
.zipcode-box-form-modal-description-two p { color: #ff0000; }
.zipcode-box-form button.close-form-btn,
.zipcode-box-form button#zipcode-submit { display: block; margin: 15px auto 0px; text-align: center; background: #4fc1e9; color: #fff; min-width: 220px; padding: 18px 16px 15px; text-transform: uppercase; border-radius: 0 !important; font-size: 14px; cursor: pointer; }
.zipcode-box-form input#zipcode { display: block; margin: 15px auto 0px; text-align: center; border-color: rgba(84, 84, 84, 0.1) !important; font-size: 0.875rem; color: #444; background-color: #fff; border-width: 1px; border-style: solid; height: 2.5rem; outline: none; border-radius: 0; font-weight: 900; padding: 8px; max-width: 480px; width: 100%; }
.zipcode-box-col-inner span.zone-img-icon { width: 55px; height: 35px; margin: 0 !important; }
.zipcode-box-col-inner span.zone-img-icon img { display: block; }
.zone-img-main { position: absolute; top: 101%; width: 100%; max-width: 800px; height: auto; z-index: 5; right: 0; box-shadow: 4px 4px 5px #55555569; transform: translateY(50px); opacity: 0; visibility: hidden; transition: all 800ms ease; }
.zone-img-main.active { opacity: 1; visibility: visible; transform: translateY(00px); margin: 0; }
.zone-img-main img { width: 100%; height: auto; display: block; object-fit: contain; }
.zipcode-box-main span.zone-tag.non-local { background-color: #33a39b; }
  
@media only screen and (max-width:991px) {
   .zipcode-box-col-inner p,.zipcode-box-main span.zone-tag,.zipcode-box-main a.zone-info { font-size: 14px; }
}
@media only screen and (max-width: 900px){
.zipcode-box-col-inner p { font-size: 14px; justify-content: flex-start; }
.zipcode-box-col { width: 100%; }
.zipcode-box-col:last-child:before { display:none;}
.zipcode-box-col:last-child { border-left: none; border-top: 1px solid #aaa; }
.zipcode-box-main span.zone-tag { padding: 2px !important; }
.zipcode-box-col-inner { padding: 3px 15px; text-align: left; }
.zipcode-box-form-modal { padding: 20px; }
.zipcode-box-form-modal h2 { font-size: 35px; }
.zipcode-box-form button.close-form-btn,
.zipcode-box-form button#zipcode-submit { padding: 12px 15px 10px; }
}
@media only screen and (max-width: 480px){
.zipcode-box-main { margin-top: 0px; }
.zipcode-box-main a.change_your_zip { display: block; margin-left: 0; }
.zipcode-box-col-inner p { flex-wrap: wrap; }
.zipcode-box-main a.zone-info { display: block; width: calc(100% - 55px); margin: 0; text-align: left; }
.zipcode-box-col-inner span.zone-img-icon img { height: 100%; }
.zipcode-box-col-inner span.zone-img-icon { height: 32px; }
}
</style>

<script>
  function calculate_distance(customer_zip){
    $("span.zone-tag").hide();
    var store_zip = $('body').attr("data-store-zip");
    
    console.log("customer_zip ==> "+ customer_zip);
    console.log("store_zip ==> "+ store_zip);
  
    var apiKey = ' AIzaSyCuxIHwRURiz6tcxTlJeR5DshsxyRI0Y6U';
    var url = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/distancematrix/json?origins=${store_zip}&destinations=${customer_zip}&key=${apiKey}`;

    $.ajax({
      url: url,
      type: 'GET',
      cors: true ,
      contentType:'application/json',
      secure: true,
      headers: {
        'Access-Control-Allow-Origin': '*',
      },
      success: function(data) {
        console.log(data);
        if (data.rows.length > 0 && data.rows[0].elements.length > 0) {
          var distance = data.rows[0].elements[0].distance.text;
          console.log('Distance: ' + distance);
          var distance_new = distance.match(/\d+(\.\d+)?/);
          var distance_in_mile = (parseFloat(distance_new)/1.609).toFixed(2);;
            if(distance_in_mile > 150){
              console.log('Distance in mile is -> ' + distance_in_mile + '  User is -> Non Local');
              $(".zone-tag.non-local").show();
              $("body").attr("userType","Non-Local");
            }else{
              console.log('Distance in mile is -> ' + distance_in_mile + '   User is -> Local');
              $(".zone-tag.local").show();
              $("body").attr("userType","Local");
            }
          
          if($("body").hasClass("template--product")){
            // custom_plant_type==Evergreen
            // Condition 1
            if($("input.custom_plant_type").length > 0){
                if($("input.custom_plant_type").val() == "Evergreen" && $("body").attr("usertype") == "Non-Local"){
                  console.log("disable buttons");
                }
            }
          
          // Condition 2
            if($("input.custom_plant_type").length > 0){
                if($("input.custom_plant_type").val() == "Deciduous" && $("body").attr("usertype") == "Non-Local" && $(".variant_dropshipping.selected").val() == "false"){
                  console.log("disable button");
                }
            }                          
          }
          
        } else {
          console.log('Distance not found');
        }
      },
      error: function() {
        $('#result').text('Error fetching distance');
      }
    });  
}
window.addEventListener('load', function() {
  var zipcodeSpan = document.querySelector('.zipcode-box-col-inner p span.zipcode');
  var zoneSpan = document.querySelector('.zipcode-box-col-inner p span.zone');
  var oldzipcodeSpan = document.querySelector('#desktopZipBox .zipcode-box .zipcode b');
  var oldzoneSpan = document.querySelector('#desktopZipBox .zone-box .zone b');
  var Hardiness_zones;
  var Hardiness_zones_form;
  var Hardiness_zones_to;
  
  const my_zipcode = localStorage.getItem("my_zipcode");
  const my_zone = localStorage.getItem("my_zone");
  var hardiness_zone_my = parseInt(my_zone);
  
  if (my_zipcode && my_zone) {
    zipcodeSpan.textContent = my_zipcode;
    zoneSpan.textContent = my_zone;
    // bypass Ms
    calculate_distance(my_zipcode);
    oldzipcodeSpan.textContent = my_zipcode;
    oldzoneSpan.textContent = my_zone;
  
    document.querySelectorAll('.product__urgency .urgency__text span p strong').forEach(element => {
      let text = element.textContent;
      
      if (text.includes("Hardiness")) {
        Hardiness_zones = element.parentElement.textContent.split(': ')[1];
        Hardiness_zones_form = parseInt(Hardiness_zones.split('-')[0]);
        Hardiness_zones_to = parseInt(Hardiness_zones.split('-')[1]);
      }
      
      if (text.includes("zone")) {
  
          console.log(Hardiness_zones_form, Hardiness_zones_to);
  
          if (Hardiness_zones_form <= hardiness_zone_my && Hardiness_zones_to >= hardiness_zone_my) {
              document.querySelectorAll('.product__atc .button--addToCart, .product__atc .shopify-payment-button__button').forEach(button => {
                  //button.removeAttribute('disabled');
                  element.textContent = "COMPATIBLE with your zone (" + my_zone + ")";
                  element.style = "color: #099989";
              });
          } else {
              document.querySelectorAll('.product__atc .button--addToCart, .product__atc .shopify-payment-button__button').forEach(button => {
                  //button.setAttribute('disabled', 'true');
                  element.textContent = "NOT COMPATIBLE with your zone (" + my_zone + ")";
                  element.style = "color: red";
              });
          }
      }
    });
  }else{
    document.querySelector('.zipcode-box-form').style.display = 'block';
    document.body.classList.add('active_zip_form');
    var defaultZip = $("div.zipcode-box-col-inner span.zipcode").text();
    calculate_distance(defaultZip);
  }
  
  
        
  document.querySelectorAll('.product__urgency .urgency__text span p strong').forEach(element => {
      let text = element.textContent;
  
      if (text.includes("Hardiness")) {
          Hardiness_zones = element.parentElement.textContent.split(': ')[1];
          Hardiness_zones_form = parseInt(Hardiness_zones.split('-')[0]);
          Hardiness_zones_to = parseInt(Hardiness_zones.split('-')[1]);
  
          //console.log(Hardiness_zones_form, Hardiness_zones_to);
  
          if (Hardiness_zones_form <= hardiness_zone_my && Hardiness_zones_to >= hardiness_zone_my) {
              document.querySelectorAll('.product__atc .button--addToCart, .product__atc .shopify-payment-button__button').forEach(button => {
                  button.removeAttribute('disabled');
              });
          } else {
              document.querySelectorAll('.product__atc .button--addToCart, .product__atc .shopify-payment-button__button').forEach(button => {
                  button.setAttribute('disabled', 'true');
              });
          }
      }
  });

  
});
  
// open pop-up js
const changeYourZipLink = document.querySelector('.zipcode-box-main a.change_your_zip');
const closePopUpElements = document.querySelectorAll('.close-pop-up-btn span, .zipcode-box-form button.close-form-btn');
const body = document.body;
const zipcodeBoxForm = document.querySelector('.zipcode-box-form');

changeYourZipLink.addEventListener('click', function(e) {
  e.preventDefault();
  body.classList.add('active_zip_form');
  zipcodeBoxForm.style.display = 'block';
});

closePopUpElements.forEach(function(element) {
  element.addEventListener('click', function(e) {
    e.preventDefault();
    zipcodeBoxForm.style.display = 'none';
    body.classList.remove('active_zip_form');
  });
});
  
window.addEventListener('load', function() {
  const oldChangeYourZipLink = document.querySelector('#showzipcodemodal');
  oldChangeYourZipLink.addEventListener('click', function (e) {
    e.preventDefault();
    body.classList.add('active_zip_form');
    zipcodeBoxForm.style.display = 'block';
  });

});  

var zoneInfo = document.querySelector('.zone-info');
var zoneImgMain = document.querySelector('.zone-img-main');

zoneInfo.addEventListener('mouseenter', function() {
    zoneImgMain.classList.add('active');
});

zoneInfo.addEventListener('mouseleave', function() {
    zoneImgMain.classList.remove('active');
});

  
// pop-up form js
// var myHeaders = new Headers();
// myHeaders.append("X-RapidAPI-Host", "plant-hardiness-zone.p.rapidapi.com");
// myHeaders.append("X-RapidAPI-Key", "6db128a2efmsh52ef2963e5737b7p13f48fjsn133d90db1e66");

// var requestOptions = {
//   method: 'GET',
//   headers: myHeaders,
//   redirect: 'follow'
// };

document.querySelector('.zipcode-box-form button#zipcode-submit').addEventListener('click', function (e) {
  e.preventDefault();
  var siblingElement = this.parentNode.querySelector('#zipcode');
  var zipcode_val = siblingElement.value;
  var Hardiness_zones;
  var Hardiness_zones_form ;
  var Hardiness_zones_to;

  // var defaultZip = $("div.zipcode-box-col-inner span.zipcode").text();
  calculate_distance(zipcode_val);
  
  fetch("https://curl.trooinbounddev.com/los-angeles-county-nursery/index.php?zip=" + zipcode_val)
    .then(response => response.json()) // Parse the response as JSON
    .then(data => {
      // Update the content of the elements with the response data
      if(data != null){
        if(data.hasOwnProperty('hardiness_zone')){
        
        var zipcodeSpan = document.querySelector('.zipcode-box-col-inner p span.zipcode');
        var zoneSpan = document.querySelector('.zipcode-box-col-inner p span.zone');
        var oldzipcodeSpan = document.querySelector('#desktopZipBox .zipcode-box .zipcode b');
        var oldzoneSpan = document.querySelector('#desktopZipBox .zone-box .zone b');
        var hardiness_zone_my = parseInt(data.hardiness_zone);
        
        if (zipcodeSpan && zoneSpan) {
          zipcodeSpan.textContent = data.zipcode; // Update with the actual data property
          zoneSpan.textContent = data.hardiness_zone; // Update with the actual data property
        }
  
        if (oldzipcodeSpan && oldzoneSpan) {
          oldzipcodeSpan.textContent = data.zipcode; // Update with the actual data property
          oldzoneSpan.textContent = data.hardiness_zone; // Update with the actual data property
        }
        
        document.querySelectorAll('.product__urgency .urgency__text span p strong').forEach(element => {
          let text = element.textContent;
          if (text.includes("Hardiness")) {
            Hardiness_zones = element.parentElement.textContent.split(': ')[1];
            Hardiness_zones_form = parseInt(Hardiness_zones.split('-')[0]);
            Hardiness_zones_to = parseInt(Hardiness_zones.split('-')[1]);
          }
          if (text.includes("zone")) {
            //console.log(Hardiness_zones_form, Hardiness_zones_to);
    
            if (Hardiness_zones_form <= hardiness_zone_my && Hardiness_zones_to >= hardiness_zone_my) {
                document.querySelectorAll('.product__atc .button--addToCart, .product__atc .shopify-payment-button__button').forEach(button => {
                    //button.removeAttribute('disabled');
                    element.textContent = "COMPATIBLE with your zone (" + data.hardiness_zone + ")";
                    element.style = "color: #099989";
                });
            } else {
                document.querySelectorAll('.product__atc .button--addToCart, .product__atc .shopify-payment-button__button').forEach(button => {
                    //button.setAttribute('disabled', 'true');
                    element.textContent = "NOT COMPATIBLE with your zone (" + data.hardiness_zone + ")";
                    element.style = "color: red";
                });
            }
          }
        });
        
        localStorage.setItem("my_zipcode", data.zipcode);
        localStorage.setItem("my_zone", data.hardiness_zone);
        
        zipcodeBoxForm.style.display = 'none';
        body.classList.remove('active_zip_form');
  
        
        
        document.querySelectorAll('.product__urgency .urgency__text span p strong').forEach(element => {
            let text = element.textContent;
        
            if (text.includes("Hardiness")) {
                Hardiness_zones = element.parentElement.textContent.split(': ')[1];
                Hardiness_zones_form = parseInt(Hardiness_zones.split('-')[0]);
                Hardiness_zones_to = parseInt(Hardiness_zones.split('-')[1]);
        
                console.log(Hardiness_zones_form, Hardiness_zones_to);
        
                if (Hardiness_zones_form <= hardiness_zone_my && Hardiness_zones_to >= hardiness_zone_my) {
                    document.querySelectorAll('.product__atc .button--addToCart, .product__atc .shopify-payment-button__button').forEach(button => {
                        button.removeAttribute('disabled');
                    });
                } else {
                    document.querySelectorAll('.product__atc .button--addToCart, .product__atc .shopify-payment-button__button').forEach(button => {
                        button.setAttribute('disabled', 'true');
                    });
                }
            }
        });
        }else{
          var element_v = document.querySelector('.zipcode-box-form-modal-description-two');
          if (element_v) {
            element_v.innerHTML = '<p>Invalid Zip code</p>';
          }  
        }
      }else{
        var element_v = document.querySelector('.zipcode-box-form-modal-description-two');
        if (element_v) {
          element_v.innerHTML = '<p>Invalid Zip code</p>';
        }
      }
    })
    .catch(error => console.log('error', error));
});
  
//$(document).ready(function(){});



  
</script>

{% schema %}
  {
    "name": "Zipcode Pop-up Section",
    "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "What's your zipcode?",
          "label": "Pop-up Heading"
        },
        {
          "type": "richtext",
          "id": "description",
          "label": "Pop-up Description"
        },
        {
          "type": "richtext",
          "id": "paragraph",
          "label": "Pop-up Paragraph"
        },
        {
          "type": "image_picker",
          "id": "zone-img-icon",
          "label": "Zone icon"
        },
        {
          "type": "image_picker",
          "id": "zone-img-main",
          "label": "Zone Pop-up Image"
        }
    ],
    "presets": [
        {"name": "Zipcode Pop-up"}
    ]
  }
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}